model{

    ### woodcock model
    ## likelihood
    for (i in 1:n_obs){
    HAT[i] ~ dnorm(mu_observed[i], tau_error[HAT_index[i]]) # adding gps-specific error
    mu_observed[i] <- mu_bias_ground + (HAT_index[i]-1)*mu_bias_add + (HAT_index[i]-1)*real_alt[i] # on average, the observed altitude should be the real altitude + the average bias
    real_alt[i] ~ dgamma(shape_flight, rate_flight) # distribution of real flight altitudes
    }
    
    ### drone model
    for(y in 1:drone_n){
    drone_hat[y] ~ dnorm(mu_bias_flight, tau_error[2])
    }
    
    ## priors
    for (k in 1:n_obs){
    HAT_index[k] ~ dcat(c(0.6511628, 0.3488372)) # HAT_index can be either 1 or 2
    }
   
    mu_bias_ground ~ dnorm(0, 1) #negative values allowed
    mu_bias_add ~ dnorm(0, 1) #negative values allowed
    mu_bias_flight <- mu_bias_ground + mu_bias_add
    
    # ground error
    tau_error[1] <- pow(sigma_error[1], -2) #precision
    sigma_error[1] ~ dnorm(0, 1) T(0,) #standard deviation
    
    # flight error
    tau_error[2] <- pow(sigma_error[2], -2) #precision
    sigma_error[2] ~ dnorm(0, 1) T(0,) #standard deviation
   
    shape_flight ~ dnorm(0, prec_shape) T(0,)
    prec_shape <- pow(5, -2)
    rate_flight ~ dnorm(0, prec_rate) T(0,)
    prec_rate <- pow(10, -2)

}  
    