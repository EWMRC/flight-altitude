model{
    # field model
    for (i in 1:n_obs){
    HAT[i] ~ dnorm(mu_observed[i], tau_combined_error[i]) # adding gps-specific error
    mu_observed[i] <- mu_GPS_bias[HAT_index[i]] + mu_terrain_bias + (HAT_index[i]-1)*real_alt[i] # on average, the observed altitude should be the real altitude + the average bias
    real_alt[i] ~ dgamma(shape_flight, rate_flight) # distribution of real flight altitudes
    }
    
    # test model
    for (y in 1:ground_test_n){
    ground_test[y] ~ dnorm(mu_GPS_bias[1], tau_GPS_error[1])
    }
    
    for (z in 1:flight_test_n){
    flight_test[z] ~ dnorm(mu_GPS_bias[2], tau_GPS_error[2])
    }
    
    # priors
    for (k in 1:n_obs){
    HAT_index[k] ~ dcat(c(0.6511628, 0.3488372)) # HAT_index can be either 1 or 2
    }
    
    for (i in 1:n_obs){
    tau_combined_error[i] <- pow(variance_combined_error[i], -1)
    variance_combined_error[i] <- variance_terrain_error + variance_GPS_error[HAT_index[i]]
    }
    
    mu_terrain_bias ~ dnorm(0, 1) #negative values allowed
    variance_terrain_error <- pow(sigma_terrain_error, 2)
    sigma_terrain_error ~ dnorm(0, 1) T(0,) #standard deviation
    
    mu_GPS_bias[1] ~ dnorm(0, 1) #negative values allowed
    tau_GPS_error[1] <- pow(variance_GPS_error[1], -1) #precision
    variance_GPS_error[1] <- pow(sigma_GPS_error[1], 2)
    sigma_GPS_error[1] ~ dnorm(0, 1) T(0,) #standard deviation
    
    mu_GPS_bias[2] ~ dnorm(0, 1) #negative values allowed
    tau_GPS_error[2] <- pow(variance_GPS_error[2], -1) #precision
    variance_GPS_error[2] <- pow(sigma_GPS_error[2], 2)
    sigma_GPS_error[2] ~ dnorm(0, 1) T(0,) #standard deviation
   
    shape_flight ~ dnorm(0, prec_shape) T(0,)
    prec_shape <- pow(5, -2)
    rate_flight ~ dnorm(0, prec_rate) T(0,)
    prec_rate <- pow(10, -2)

}  
    